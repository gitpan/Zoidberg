use Sys::Hostname;
my $i;
$VAR1 = 
{
    #'\O' => q|$self|, # this is the current object
    '\a' => sub { chr(007) }, # ASCII bell
    '\d' => sub { my $str = localtime(); $str =~ m/^((\w+\s){2}\d+)/; $1}, # the date in "Weekday Month Date" format
    '\w' => sub { $ENV{PWD} }, # working dir
    '\H' => sub { hostname }, # duh
    '\h' => sub { (split/\./,hostname,1)[0] }, # basename of D'OH
    '\u' => sub { (getpwuid($>))[0] }, # username
    '\W' => sub { (split/\//,$ENV{PWD})[-1] || '/' }, # basename of PWD
    '\U' => sub { [getpwuid($>)]->[2]?'$':'#' }, # this should be \$, but i can't seem to get it escaped right througout all the levels ... it means uid
    '\e'  => sub { chr(033) }, # an ASCII escape character ( eq chr(27) eq "\e" )
    '\j'  => sub { my$j=$_[0]->{parent}->parent->{jobs};return ref($j)?scalar@{$j}:0 }, # number of jobs
    '\l'  => sub { (split/\//,readlink("/proc/$$/fd/1"))[-1] }, # the basename of the shell's terminal device name
    '\s'  => sub { (split/\//,$0)[-1]}, # the name of the shell, the basename of $0 (the portion following the final slash)

 '\L'=>  
  sub { my$self=shift;
   my$clr=sub{my($z,$v,$l,@c)=(0,@_,qw/red blue yellow white green/);my$s=$l/scalar(@c);for(my$i=0;int($i*$s)<=$v;$i++){$z=$i};return $c[$z] };
   join " ", grep {length} map { 
     my $ss = $_;
     if (-e $ss->{f} && open(FL,$ss->{f})) {
      $ss->{m}->(<FL>) ;
     }
   } (
   {f=>"/proc/acpi/thermal/0/status", m=>sub{map{if(/^temp./){return sprintf"%.1f%sF",(split(/\s+/))[1],chr(176)}}@_}},
   {f=>"/proc/acpi/battery/0/status", m=>sub{my%ha;map{if(/(\d+)\s*(mWh?)\s*$/){$ha{$2}=$1}}@_;sprintf"%.1fu",$ha{mWh}/$ha{mW}}},
   {f=>"/proc/acpi/ac_adapter/0/status", m=>sub{(grep/off/,@_)?chr(185):chr(186)}},
   {f=>"/proc/apm", m=>sub{ my$l=shift;chomp$l;my@L=split/\s+/,$l;my($d,$p,$m,$u)=@L[3,6,7,8];$d=~s/^0x0(\d)?/$1?'+':'-'/e;my$ret="$p$d";$self->{color}=$clr->($p,100);($p!=-1)?$ret:''}},
#   {f=>"/proc/net/wireless",m=>sub{sprintf"%s%d/%d",chr(165),((unpack"A5x"x5,join"",@_[2..@_])[2,3])}},
  )
},

}

 
